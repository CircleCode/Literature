<?xml version="1.0" encoding="utf-8"?>
<?xyl-use href="../Definitions.xyl"?>

<definition xmlns="http://hoa-project.net/xyl/xylophone">
<yield name="chapter">

  <h1 id="Appendix_HTTP_servers">Manuel d'apprentissage<title_break />Annexe,
  Configuration des serveurs HTTP</h1>

  <p>Nous proposons dans ce guide de découvrir comment configurer un hôte
  virtuel ainsi que la réécriture d'URL pour les serveurs HTTP les plus courants
  afin de profiter de toutes les fonctionnalités d'Hoa.</p>

  <p>Les hôtes virtuels permettent de maintenir plusieurs sites Internet sur un
  même serveur tout en leur associant un nom ainsi que des paramètres
  spécifiques.</p>

  <p>La réécriture d'URL consiste à faire réécrire au serveur HTTP des URL
  complexes sous une forme plus simple afin d'en améliorer la lisibilité (pour
  les utilisateurs du sites mais également pour les moteurs de recherches).</p>

  <h2 id="Table_des_matieres" for="menu-toc">Table des matières</h2>

  <tableofcontents id="main-toc" />

  <h2 id="Apache" for="main-toc menu-toc">Apache</h2>

  <p>Apache est le serveur HTTP le plus utilisé au monde. Il est installé par
  défaut sur Mac OS X, disponible via votre gestionnaire de paquet sur la
  plupart des distributions Linux ou installable en quelques clics sous Windows.
  Vous pouvez également retrouver toutes les versions sur la page
  http://httpd.apache.org/</p>

  <h3 id="Apache_Hote_virtuel" for="main-toc">Hôte virtuel</h3>

  <p>Pour ajouter un hôte virtuel à Apache il faut modifier le fichier
  httpd.conf afin d'y ajouter la déclaration de notre nouvel hôte :</p>

  <pre><code language="conf">&amp;lt;VirtualHost *:80>
  ServerName www.foo.com

  DocumentRoot /path/to/my/hoa/app/Application/Public
&amp;lt;/VirtualHost></code></pre>

  <p>Cet hôte virtuel minimal permet de faire fonctionner Hoa grâce au
  DocumentRoot qui pointe sur le dossier /Application/Public/. Le ServerName le
  plus courant pour le développement est localhost car il est résolu sur l'IP
  locale (127.0.0.1). Si vous utilisez un autre nom,
  celui-ci doit figurer dans votre fichier Host (/etc/hosts sous Unix, ... sous
  Windows) où être résolu par votre serveur DNS comme étant sur votre IP locale.
  </p>

  <p>La documentation des <a href="http://httpd.apache.org/docs/2.4/vhosts/">
  hôtes virtuels</a> ...</p>

  <h3 id="Apache_Reecriture_d_URL" for="main-toc">Réécriture d'URL</h3>

  <p>La réécriture d'URL pour Apache peut être spécifiée dans la déclaration de
  l'hôte virtuel en précisant les paramètres pour un dossier (Directory) :</p>

  <pre><code language="conf">
&amp;lt;Directory "/path/to/my/hoa/app/Application/Public">
  Options All
  AllowOverride All
  Order allow,deny
  Allow from all

  RewriteEngine on
  # redirect www to non-www
  RewriteCond %{HTTP_HOST} ^www\.(.*)$ [NC]
  RewriteRule ^(.*)$ http://%1/$1 [R=301,L]
  # handle directory style parameters
  RewriteCond %{SCRIPT_FILENAME} !-f
  RewriteCond %{SCRIPT_FILENAME} !-d
  RewriteRule ^(.*)$ index.php?$1
&amp;lt;/Directory></code></pre>

  <p>ou dans un fichier .htaccess à placer dans le répertoire
  /Application/Public de votre application Hoa :</p>

  <pre><code language="conf">RewriteEngine On
RewriteCond %{SCRIPT_FILENAME} !-f
RewriteCond %{SCRIPT_FILENAME} !-d
RewriteRule ^(.*)$ index.php?$1</code></pre>

  <p>todo expliquer les règles</p>

  <h2 id="Nginx" for="main-toc menu-toc">Nginx</h2>

  <p>Nginx est un serveur HTTP développé pour les sites à fort traffic. Il a
  acquis sa réputation grâce à sa faible utilisation des ressources. Nginx est
  disponible sur toutes les plateformes depuis la page http://nginx.org/</p>

  <h3 id="Nginx_Hote_virtuel" for="main-toc">Hôte virtuel</h3>

  <p>Les hôtes virtuels, appelés ServerBlock pour Nginx, sont décris dans le
  fichier nginx.conf. Pour ajouter un hôte virtuel pour votre développement avec
  Hoa vous pouvez ajouter les lignes suivantes en toute fin de votre fichier
  nginx.conf :</p>

  <pre><code language="conf">server {
  server_name localhost;

  location / {
      root   /path/to/my/hoa/app/Application/Public/;
      index  index.php;
  }

  // passer les fichiers .php à PHP FastCGI
  location ~ \.php$ {
      fastcgi_pass 127.0.0.1:9000;
      fastcgi_index index.php;
      fastcgi_param SCRIPT_FILENAME /path/to/my/hoa/app/Application/Public/$fastcgi_script_name;
      include /etc/nginx/fastcgi_params;
  }
}
  </code></pre>

  <p>Le bloc server permet de décrire le nom du serveur. Le bloc location permet
  de préciser le chemin par défaut ainsi que la page d'index par défaut.</p>

  <p>todo préciser la doc</p>

  <h3 id="Nginx_Reecriture_d_URL" for="main-toc">Réécriture d'URL</h3>

  <p>La réécriture d'URL pour Nginx doit être décrite dans le bloc location en
  y ajoutant les lignes suivantes :</p>

  <pre><code language="conf">try_files $uri $uri/ /index.php?$args;</code></pre>

  <p>L'instruction try_files vérifie l'existance de fichiers dans l'ordre des
  paramètres. Ainsi avec l'instruction précédente Nginx va chercher le fichier
  demandé, puis un dossier avec le même nom (avec le slash final) et si rien de
  tel n'est trouvé sur le disque dur, alors il transformera la requête pour la
  passer à index.php.</p>

  <h2 id="Bhoa" for="main-toc menu-toc">Bhoa</h2>

  <p>Bhoa est le serveur HTTP intégré à Hoa. Il n'est pas très évolué mais ne
  nécessite aucune configuration particulière pour fonctionner. Il est donc
  l'outil idéal pour développer avec Hoa.</p>

  <p>Bhoa jouant le rôle de serveur HTTP,
  il a besoin de communiquer avec PHP qui lui se charge interpréter les pages.
  Bhoa utilise PHP FastCGI pour exécuter PHP, nous allons donc devoir le
  démarrer sur le port standard (9000) :</p>

  <tabs class="plain">
    <tablist>
      <tab for="tunix_start_phpcgi" selected="true">Unix</tab>
      <tab for="twindows_start_phpcgi">Windows</tab>
    </tablist>
    <tabpanel id="tunix_start_phpcgi">
      <pre><code language="shell">$ php-cgi -b 127.0.0.1:9000&amp;amp;</code></pre>
    </tabpanel>
    <tabpanel id="twindows_start_phpcgi">
      <pre><code language="shell">// dans une nouvelle invite de commande
> php-cgi -b 127.0.0.1:9000</code></pre>
    </tabpanel>
  </tabs>

  <p>Enfin, Hoa fournit une abstraction des chemins à travers le protocole
  <code>hoa://</code> qui propose le chemin
  <code>hoa://Application/Public/</code> pour accéder à notre dossier
  public. Nous allons utiliser ce chemin pour définir la racine du serveur ;
  ainsi :</p>
  <tabs class="plain">
    <tablist>
      <tab for="tunix_start_bhoa" selected="true">Unix</tab>
      <tab for="twindows_start_bhoa">Windows</tab>
    </tablist>
    <tabpanel id="tunix_start_bhoa">
      <pre><code language="shell">$ gordonsapp bhoa --root hoa://Application/Public/
Server is up, on tcp://127.0.0.1:8888!
Root: hoa://Application/Public/.

Waiting for connection… ▋</code></pre>
    </tabpanel>
    <tabpanel id="twindows_start_bhoa">
      <pre><code language="shell">> gordonsapp bhoa --root hoa://Application/Public/
Server is up, on tcp://127.0.0.1:8888!
Root: hoa://Application/Public/.

Waiting for connection… ▋</code></pre>
    </tabpanel>
  </tabs>
  <p>Par défaut Bhoa écoute le port 8888. Il faut des droits <code>root</code>
  pour écouter le port 80.</p>

  <h2 id="Pour_aller_plus_loin" for="main-toc">Pour aller plus loin</h2>

  <p>Maintenant que votre hôte virtuel est configuré correctement ainsi que la
  réécriture d'URL, vous pouvez profiter d'Hoa\Dns pour résoudre les noms de
  domaine .hoa et ainsi utiliser un hôte virtuel comme monprojet.hoa</p>
</yield>
</definition>
